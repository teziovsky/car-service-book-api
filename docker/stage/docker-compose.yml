version: "3.8"
name: "car_service_book"
services:
  app:
    container_name: car_service_book_app
    image: car_service_book_app
    build:
      dockerfile: Dockerfile
      context: ../../frontend
      target: dev
    env_file:
      - ../../.env.stage
    volumes:
      - ../../frontend:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "pnpm dev"
    ports:
      - ${APP_PORT}:3000
    networks:
      - car_service_book_network
    depends_on:
      - api
  api:
    container_name: car_service_book_api
    image: car_service_book_api
    build:
      dockerfile: Dockerfile
      context: ../../backend
      target: dev
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgresql:5432/${POSTGRES_DB}?schema=public
    env_file:
      - ../../.env.stage
    volumes:
      - ../../backend:/usr/src/app
      - /usr/src/app/node_modules
    command: sh -c "pnpm prisma:generate:stage && pnpm start:dev"
    ports:
      - ${API_PORT}:3000
    networks:
      - car_service_book_network
    depends_on:
      - postgresql
  postgresql:
    container_name: car_service_book_postgres
    image: postgres:14.1-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    env_file:
      - ../../.env.stage
    volumes:
      - car_service_book_postgresql:/var/lib/postgresql/data
    ports:
      - 127.0.0.1:${POSTGRES_PORT}:5432
    networks:
      - car_service_book_network
volumes:
  car_service_book_postgresql:
    name: car_service_book_postgresql
    driver: local
networks:
  car_service_book_network:
